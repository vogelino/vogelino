---
import type { Page } from 'astro'
import CoolSitesFavicon from '../../components/CoolSiteFavicon'
import CoolSiteThumbnail from '../../components/CoolSiteThumbnail'
import FancyHeadline from '../../components/FancyHeadline.astro'
import ArrowUp from '../../components/icons/ArrowUp.astro'
import ExternalLink from '../../components/icons/ExternalLink'
import type { CoolSiteType } from '../../schemas/coolSites'
import classNames from '../../utils/classNames'
import { getParsedCoolSites } from '../../utils/getParsedCoolSites'
import CoolSitesPage from './_CoolSitesPage.astro'

export const prerender = false

const coolSites = await getParsedCoolSites()
const coolSite = coolSites.find((s) => s.id === Astro.params.id)
const idx = coolSites.findIndex((s) => s.id === Astro.params.id)

if (!coolSite) throw new Error(`Cool site with id "${Astro.params.id}" not found`)

export type Props = {
	coolSite: CoolSiteType
	page: Page
	nextCoolSites: CoolSiteType
	prevCoolSites: CoolSiteType
}

const linkUrl = new URL(coolSite.url)
linkUrl.searchParams.set('ref', Astro.site?.href?.toString() ?? '')
const linkWithRef = linkUrl.toString()

const initialPage = Math.floor(idx / 48) + 1
---

<CoolSitesPage initialPage={initialPage} disableGrid allCoolSites={coolSites}>
  <a
    href={`/cool-sites?page=${initialPage}`}
    title="Back to coolSite list"
    data-page={`/cool-sites?page=${initialPage}`}
    tabindex="-1"
    class={classNames(
      "overlay fixed px-10 inset-0 z-20 bg-opacity-10",
      "max-w-[1440px] min-[1440px]:border-x",
      `min-[1440px]:border-x-grayMed border-b`,
      "top-0 left-1/2 -translate-x-1/2 w-screen"
    )}></a>
  <ul
    class={classNames(
      "fixed px-10 inset-0 z-30 bg-opacity-10",
      "max-w-[1440px] min-h-[calc(100svh-80px)]",
      "top-0 left-1/2 -translate-x-1/2 w-screen",
      "flex justify-center items-center list-none",
      "pointer-events-none"
    )}
  >
    <div
      class={classNames(
        "max-w-lg w-full list-none flex flex-col gap-2",
        "p-4 pointer-events-auto bg-bg pb-4 border border-grayMed",
        "shadow-lg dark:shadow-black/60"
      )}
    >
      <a
        href={`/cool-sites?page=${initialPage}`}
        title="Back to all cool sites"
        class="focusable flex gap-2 px-2 -ml-2 rounded-full bg-none w-fit"
      >
        <ArrowUp className="-rotate-90" />
        All cool sites
      </a>

      <div class="relative pr-6">
        <FancyHeadline
          title={coolSite.title}
          className="md:text-3xl 2xl:text-4xl !leading-[0.9em] mb-0"
        />
        <CoolSitesFavicon
          link={coolSite}
          class="absolute top-1/2 right-0 -translate-y-1/2"
          size={24}
        />
      </div>
      {
        coolSite.tags.length > 0 && (
          <ul class="flex flex-wrap gap-x-1.5 gap-y-1 -mt-1 mb-2">
            {coolSite.tags.map((tag) => (
              <li
                class={classNames(
                  "inline-block px-2 pb-0 pt-1 bg-grayUltraLight",
                  "text-sm text-grayDark"
                )}
              >
                {tag}
              </li>
            ))}
          </ul>
        )
      }
      <div>
        <a
          href={linkWithRef}
          target="_blank"
          rel="noopener nofollow"
          title={`Direct external link to the cool site: "${coolSite.title} (${coolSite.url})"`}
          class={classNames(
            `flex flex-col gap-4 group`,
            `focus-visible:ring-2 focus-visible:ring-fg outline-none`,
            `focus-visible:overflow-hidden focus-visible:rounded-lg`,
            `focus-visible:ring-offset-8 focus-visible:ring-offset-bg`
          )}
        >
          <CoolSiteThumbnail link={coolSite} />
          <span
            class={classNames(
              "px-4 py-1 pt-2 rounded-full bg-alt focusable inline-block",
              "transition-colors hover-hover:group-hover:bg-fg hover-hover:group-hover:text-alt",
              "text-lg flex items-center gap-2 w-fit"
            )}
          >
            Open site <ExternalLink className="w-5 h-5 -mt-1" />
          </span>
        </a>
      </div>
    </div>
  </ul>
</CoolSitesPage>

<style>
  a[title="Back to coolSite list"] {
    background-color: rgb(252 254 255 / var(--tw-bg-opacity));
    background-image: radial-gradient(transparent, var(--bg) 1px);
    background-size: 4px 4px;
    backdrop-filter: blur(4px);
  }

  :root[data-applied-mode="dark"] a[title="Back to coolSite list"] {
    background-color: rgb(28 28 28 / var(--tw-bg-opacity));
  }
</style>

<script>
  function initEscapeListener() {
    const backLink = document.querySelector(
      "a[title='Back to coolSite list']"
    ) as HTMLAnchorElement;

    if (!backLink) return;
    const page = backLink.dataset.page;

    if (!page) return;

    document.addEventListener("keydown", (event: KeyboardEvent) => {
      if (event.key === "Escape") {
        event.preventDefault();
        window.open(page, "_self");
      }
    });
  }

  document.addEventListener("astro:page-load", initEscapeListener);
</script>
