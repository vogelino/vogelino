---
import { Image } from 'astro:assets'
import { type AstroGlobImageType } from '../utils/astroTypes'
import classNames from '../utils/classNames'

export interface Props {
	projectName: string
	imageUrl: string
}

const { projectName, imageUrl } = Astro.props

const sliderImage = await Astro.glob<AstroGlobImageType<'webp' | 'svg'>>(
	'/src/assets/images/projects-media/*.{webp,svg}',
).then(
	(images) =>
		images.find((image) => image.default.src.includes(imageUrl))?.default,
)
---

{
	sliderImage && (
		<li
			class={classNames(
				`splide__slide`,
				`w-screen h-[calc(100svh-188x)] px-6 !mt-24 !mb-20`,
				`flex items-center justify-center`,
			)}
			style={{
				filter: `blur(calc(var(--scroll-percentage, 0) * 10px))`,
				transition: 'filter 100ms ease-out',
			}}
		>
			<a
				class={classNames(
					`powerswipe-link`,
					`rounded overflow-hidden shadow-lg`,
					`shadow-grayMed dark:shadow-grayUltraLight`,
					`contrast-more:shadow-bg`,
					`ring-1 ring-black/5 max-w-full max-h-full`,
					`outline-none focus-visible:ring-2 focus-visible:ring-fg`,
					`focus-visible:ring-offset-4 focus-visible:ring-offset-grayUltraLight`,
					`hover-hover:hover:cursor-zoom-in`,
				)}
				href={sliderImage.src}
			>
				<Image
					src={sliderImage}
					alt={`Screenshot of the project ${projectName}`}
					class="splide__img"
					loading="eager"
					quality={100}
				/>
			</a>
		</li>
	)
}
