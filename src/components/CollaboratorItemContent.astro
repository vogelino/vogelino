---
import type { CollectionEntry } from 'astro:content'
import type { AstroGlobImageType } from '../utils/astroTypes'
import classNames from '../utils/classNames'
import { Image } from 'astro:assets'

export interface Props {
	collaborator: CollectionEntry<'collaborators'>
}

const { collaborator } = Astro.props

const isInteractive = Boolean(collaborator.data.url)

const commonAvatarProps = {
	alt: `Portrait image of ${collaborator.data.name}`,
	class: classNames(
		'object-cover aspect-square',
		'transition-opacity bg-white',
		'motion-reduce:transition-none'
	),
}

const collaboratorImage = await Astro.glob<AstroGlobImageType<'webp' | 'svg'>>(
	'/src/assets/images/collaborators/*.{svg,webp}'
).then((files) => files.find((file) => file.default.src.includes(collaborator.slug))?.default)
---

{
	collaboratorImage && (
		<>
			<span
				class={classNames(
					`relative border-r border-grayLight`,
					`bg-bg w-[45px] h-[44px]`,
				)}
			>
				<Image
					src={collaboratorImage}
					alt={commonAvatarProps.alt}
					class={commonAvatarProps.class}
				/>
				<span
					class={classNames(
						`absolute inset-0 z-10 bg-grayMed mix-blend-soft-light`,
						`group-hover:bg-fg transition-colors`,
						`motion-reduce:transition-none`,
					)}
				/>
			</span>
			<span
				class={classNames(
					`px-4 leading-4 text-sm`,
					isInteractive && `underline decoration-grayMed`,
				)}
			>
				{collaborator.data.name}
			</span>
		</>
	)
}
